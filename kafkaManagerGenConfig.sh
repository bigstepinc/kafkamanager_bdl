#!/usr/bin/env bash
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

KAFKA_MANAGER_HOME=${KAFKA_HOME:-"/opt/kafka-manager-1.3.3.21/"}
KAFKA_MANAGER_USERNAME=${KAFKA_MANAGER_USERNAME:-"admin"}
KAFKA_MANAGER_PASSWORD=${KAFKA_MANAGER_PASSWORD:-"password"}

function validate_env() {
    echo "Validating environment"

    if [ -z $ZK_HOSTS ]; then
        echo "ZK_HOSTS is a mandatory environment variable"
        exit 1
   fi
    
   if [ -z $KAFKA_MANAGER_USERNAME ]; then
        echo "KAFKA_MANAGER_USERNAME is a mandatory environment variable"
        exit 1
   fi
    
   if [ -z $KAFKA_MANAGER_PASSWORD ]; then
        echo "KAFKA_MANAGER_PASSWORD is a mandatory environment variable"
        exit 1
    fi
    
    echo "Environment validation successful"
}

function create_kafka_manager_config_file() {
    rm -rf $KAFKA_MANAGER_HOME/conf/application.conf
    touch  $KAFKA_MANAGER_HOME/conf/application.conf
    echo "# This is the main configuration file for the application." >>  $KAFKA_MANAGER_HOME/conf/application.conf
    echo "# This is autogenerated. Do not change it." >>  $KAFKA_MANAGER_HOME/conf/application.conf
    echo "# The secret key is used to secure cryptographics functions." >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "play.crypto.secret=\"^<csmm5Fx4d=r2HEX8pelM3iBkFVv?k[mc;IZE<_Qoq8EkX_/7@Zt6dP05Pzea3U\"" >> $KAFKA_MANAGER_HOME/conf/application.conf
#     echo "play.crypto.secret=${?APPLICATION_SECRET}" >> $KAFKA_MANAGER_HOME/conf/application.conf

    echo "play.i18n.langs=[\"en\"]" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "play.http.requestHandler = play.http.DefaultHttpRequestHandler" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "play.http.context = \"/\"" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "play.application.loader=loader.KafkaManagerLoader" >> $KAFKA_MANAGER_HOME/conf/application.conf

    echo "kafka-manager.zkhosts=$ZK_HOSTS" >> $KAFKA_MANAGER_HOME/conf/application.conf

    echo "pinned-dispatcher.type=PinnedDispatcher" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "pinned-dispatcher.executor=thread-pool-executor" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "application.features=[\"KMClusterManagerFeature\",\"KMTopicManagerFeature\",\"KMPreferredReplicaElectionFeature\",\"KMReassignPartitionsFeature\"]" >> $KAFKA_MANAGER_HOME/conf/application.conf
    

    echo "akka {" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "  loggers = [\"akka.event.slf4j.Slf4jLogger\"]" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "  loglevel = \"INFO\"" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "}" >> $KAFKA_MANAGER_HOME/conf/application.conf

    echo "akka.logger-startup-timeout = 60s" >> $KAFKA_MANAGER_HOME/conf/application.conf

    echo "basicAuthentication.enabled=true" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "basicAuthentication.username=$KAFKA_MANAGER_USERNAME" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "basicAuthentication.password=$KAFKA_MANAGER_PASSWORD" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "basicAuthentication.realm=\"Kafka-Manager\"" >> $KAFKA_MANAGER_HOME/conf/application.conf
    echo "basicAuthentication.excluded=[\"/api/health\"] # ping the health of your instance without authentification" >> $KAFKA_MANAGER_HOME/conf/application.conf

#     echo "kafka-manager.consumer.properties.file=${?CONSUMER_PROPERTIES_FILE}" >> $KAFKA_MANAGER_HOME/conf/application.conf
}

validate_env && create_kafka_manager_config_file
